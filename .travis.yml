sudo: required
language: generic

services:
  - docker

before_install:
  # Build the Docker image
  - docker build -t nimroda/docker-react -f Dockerfile.dev .

  # Start the container in detached mode
  - docker run -d --name container nimroda/docker-react bash -c "
      apt-get update && 
      apt-get install -y bash libxml2-dev libxslt-dev zlib1g-dev libssl-dev ruby3.1 ruby3.1-dev build-essential && 
      echo 'Dependencies installed successfully!' && 
      while true; do sleep 3600; done"  # Use an infinite loop to keep the container alive

  # Check if the container is running
  - docker ps -a  # Ensure the container is listed as "Up"

  # Check the logs of the container for any issues
  - docker logs container || echo "Failed to retrieve logs"

  # Give the container some time to initialize (10 seconds)
  - sleep 10

  # Check again if the container is still running
  - docker ps -a  # This will show the status of the container

  # Verify Ruby version is 3.1.0
  - docker exec container ruby -v  # Should show Ruby 3.1.0

  # Check if Nokogiri is installed (or try to install it)
  - docker exec container gem list nokogiri || (echo "Nokogiri gem not found, installing..." && docker exec container gem install nokogiri --platform=ruby)

  # Install Nokogiri in the running container
  - docker exec container gem install nokogiri --platform=ruby || (echo "Nokogiri installation failed!" && exit 1)

script:
  # Run tests inside the container, ensuring CI=true is set
  - docker exec -e CI=true container npm run test

deploy:
  provider: elasticbeanstalk
  region: "us-east-1"
  app: "frontend"
  env: "Frontend-env"
  bucket_name: "elasticbeanstalk-us-east-1-122610503598"
  bucket_path: "frontend"
  on:
    branch: master
  access_key_id: "$AWS_ACCESS_KEY"
  secret_access_key: "$AWS_SECRET_KEY"
