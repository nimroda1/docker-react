# Use an Ubuntu-based image for more recent glibc
FROM ubuntu:20.04

# Set environment variables to avoid tzdata interactive prompts
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=UTC

# Install dependencies (Ruby, Node.js, etc.)
RUN apt-get update && apt-get install -y \
    curl \
    gnupg2 \
    build-essential \
    libxml2-dev \
    libxslt-dev \
    zlib1g-dev \
    libssl-dev \
    bash \
    ruby-full \
    tzdata \
    ca-certificates \
    software-properties-common && \
    apt-get clean

# Install Node.js (this will also install npm)
RUN curl -fsSL https://deb.nodesource.com/setup_14.x | bash - && \
    apt-get install -y nodejs && \
    apt-get clean

# Install Yarn (optional, if you're using Yarn for package management)
# RUN npm install -g yarn

# Import the necessary public GPG keys for RVM
RUN curl -sSL https://rvm.io/mpapis.asc | gpg2 --import - \
    && curl -sSL https://rvm.io/pkuczynski.asc | gpg2 --import -

# Install RVM and Ruby 3.1.0
RUN curl -sSL https://get.rvm.io | bash -s stable --ruby=3.1.0

# Explicitly use bash to source the RVM script
RUN bash -c "source /usr/local/rvm/scripts/rvm && rvm use 3.1.0 --default"

# Set working directory for the app
WORKDIR /app

# Install dependencies (for React)
COPY package*.json ./
RUN npm install

# Copy application files
COPY . .

# Expose port and set the command to run the React app
EXPOSE 3000
CMD ["npm", "run", "start"]
